{"ast":null,"code":"var _jsxFileName = \"/Users/urbanobaz/Desktop/projects/nextbnb/components/DayRangePicker.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from \"react\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from \"date-fns/format\";\nimport dateFnsParse from \"date-fns/parse\";\nimport { DateUtils } from \"react-day-picker\";\n\nvar parseDate = function parseDate(str, format, locale) {\n  var parsed = dateFnsParse(str, format, new Date(), {\n    locale: locale\n  });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nvar formatDate = function formatDate(date, format, locale) {\n  return dateFnsFormat(date, format, {\n    locale: locale\n  });\n};\n\nvar format = \"dd MMM yyyy\";\nvar today = new Date();\nvar tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1);\n\nvar numberOfNightsBetweenDates = function numberOfNightsBetweenDates(startDate, endDate) {\n  var start = new Date(startDate);\n  var end = new Date(endDate);\n  var dayCount = 0;\n\n  while (end > start) {\n    dayCount++;\n    start.setDate(start.getDate() + 1);\n  }\n\n  return dayCount;\n};\n\nexport default (function () {\n  var _useState = useState(new Date()),\n      startDate = _useState[0],\n      setStateDate = _useState[1];\n\n  var _useState2 = useState(new Date()),\n      endDate = _useState2[0],\n      setEndDate = _useState2[1];\n\n  return __jsx(\"div\", {\n    className: \"jsx-2233285091\" + \" \" + \"date-range-picker-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"From:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    placeholder: \"\".concat(dateFnsFormat(new Date(), format)),\n    dayPickerProps: {\n      modifiers: {\n        disabled: {\n          before: new Date()\n        }\n      }\n    },\n    onDayChange: function onDayChange(day) {\n      setStateDate(day);\n\n      if (numberOfNightsBetweenDates(day, endDate) < 1) {\n        var newEndDate = new Date(day);\n        newEndDate.setDate(newEndDate.getDate() + 1);\n        setEndDate(newEndDate);\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(\"label\", {\n    className: \"jsx-2233285091\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"To:\"), __jsx(DayPickerInput, {\n    formatDate: formatDate,\n    format: format,\n    parseDate: parseDate,\n    placeholder: \"\".concat(dateFnsFormat(new Date(), format)),\n    dayPickerProps: {\n      modifiers: {\n        disabled: [startDate, {\n          before: startDate\n        }]\n      }\n    },\n    onDayChange: function onDayChange(day) {\n      setEndDate(day);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1123662568\",\n    __self: this\n  }, \".date-range-picker-container.jsx-2233285091 div.jsx-2233285091{display:grid;border:1px solid #ddd;grid-template-columns:30% 70%;padding:10px;}label.jsx-2233285091{padding-top:10px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91cmJhbm9iYXovRGVza3RvcC9wcm9qZWN0cy9uZXh0Ym5iL2NvbXBvbmVudHMvRGF5UmFuZ2VQaWNrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUZrQixBQUd3QixBQU1JLGFBTEssSUFNeEIsa0JBTGdDLDhCQUNqQixhQUNmIiwiZmlsZSI6Ii9Vc2Vycy91cmJhbm9iYXovRGVza3RvcC9wcm9qZWN0cy9uZXh0Ym5iL2NvbXBvbmVudHMvRGF5UmFuZ2VQaWNrZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IERheVBpY2tlcklucHV0IGZyb20gXCJyZWFjdC1kYXktcGlja2VyL0RheVBpY2tlcklucHV0XCI7XG5pbXBvcnQgXCJyZWFjdC1kYXktcGlja2VyL2xpYi9zdHlsZS5jc3NcIjtcbmltcG9ydCBkYXRlRm5zRm9ybWF0IGZyb20gXCJkYXRlLWZucy9mb3JtYXRcIjtcbmltcG9ydCBkYXRlRm5zUGFyc2UgZnJvbSBcImRhdGUtZm5zL3BhcnNlXCI7XG5pbXBvcnQgeyBEYXRlVXRpbHMgfSBmcm9tIFwicmVhY3QtZGF5LXBpY2tlclwiO1xuXG5jb25zdCBwYXJzZURhdGUgPSAoc3RyLCBmb3JtYXQsIGxvY2FsZSkgPT4ge1xuICBjb25zdCBwYXJzZWQgPSBkYXRlRm5zUGFyc2Uoc3RyLCBmb3JtYXQsIG5ldyBEYXRlKCksIHsgbG9jYWxlIH0pO1xuICByZXR1cm4gRGF0ZVV0aWxzLmlzRGF0ZShwYXJzZWQpID8gcGFyc2VkIDogbnVsbDtcbn07XG5cbmNvbnN0IGZvcm1hdERhdGUgPSAoZGF0ZSwgZm9ybWF0LCBsb2NhbGUpID0+XG4gIGRhdGVGbnNGb3JtYXQoZGF0ZSwgZm9ybWF0LCB7IGxvY2FsZSB9KTtcblxuY29uc3QgZm9ybWF0ID0gXCJkZCBNTU0geXl5eVwiO1xuXG5jb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG5jb25zdCB0b21vcnJvdyA9IG5ldyBEYXRlKHRvZGF5KTtcbnRvbW9ycm93LnNldERhdGUodG9tb3Jyb3cuZ2V0RGF0ZSgpICsgMSlcblxuY29uc3QgbnVtYmVyT2ZOaWdodHNCZXR3ZWVuRGF0ZXMgPSAoc3RhcnREYXRlLCBlbmREYXRlKSA9PiB7XG4gIGNvbnN0IHN0YXJ0ID0gbmV3IERhdGUoc3RhcnREYXRlKTtcbiAgY29uc3QgZW5kID0gbmV3IERhdGUoZW5kRGF0ZSlcbiAgbGV0IGRheUNvdW50ID0gMDtcblxuICB3aGlsZSAoZW5kID4gc3RhcnQpIHtcbiAgICBkYXlDb3VudCsrO1xuICAgIHN0YXJ0LnNldERhdGUoc3RhcnQuZ2V0RGF0ZSgpICsgMSk7XG4gIH1cblxuICByZXR1cm4gZGF5Q291bnQ7XG59XG5cbmV4cG9ydCBkZWZhdWx0ICgpID0+IHtcbiAgY29uc3QgW3N0YXJ0RGF0ZSwgc2V0U3RhdGVEYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKCkpO1xuICBjb25zdCBbZW5kRGF0ZSwgc2V0RW5kRGF0ZV0gPSB1c2VTdGF0ZShuZXcgRGF0ZSgpKTtcblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwiZGF0ZS1yYW5nZS1waWNrZXItY29udGFpbmVyXCI+XG4gICAgICA8ZGl2PlxuICAgICAgICA8bGFiZWw+RnJvbTo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHBhcnNlRGF0ZT17cGFyc2VEYXRlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtgJHtkYXRlRm5zRm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiB7XG4gICAgICAgICAgICAgICAgYmVmb3JlOiBuZXcgRGF0ZSgpXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0U3RhdGVEYXRlKGRheSk7XG4gICAgICAgICAgICBpZiAobnVtYmVyT2ZOaWdodHNCZXR3ZWVuRGF0ZXMoZGF5LCBlbmREYXRlKSA8IDEpIHtcbiAgICAgICAgICAgICAgY29uc3QgbmV3RW5kRGF0ZSA9IG5ldyBEYXRlKGRheSk7XG4gICAgICAgICAgICAgIG5ld0VuZERhdGUuc2V0RGF0ZShuZXdFbmREYXRlLmdldERhdGUoKSArIDEpO1xuICAgICAgICAgICAgICBzZXRFbmREYXRlKG5ld0VuZERhdGUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbD5Ubzo8L2xhYmVsPlxuICAgICAgICA8RGF5UGlja2VySW5wdXRcbiAgICAgICAgICBmb3JtYXREYXRlPXtmb3JtYXREYXRlfVxuICAgICAgICAgIGZvcm1hdD17Zm9ybWF0fVxuICAgICAgICAgIHBhcnNlRGF0ZT17cGFyc2VEYXRlfVxuICAgICAgICAgIHBsYWNlaG9sZGVyPXtgJHtkYXRlRm5zRm9ybWF0KG5ldyBEYXRlKCksIGZvcm1hdCl9YH1cbiAgICAgICAgICBkYXlQaWNrZXJQcm9wcz17e1xuICAgICAgICAgICAgbW9kaWZpZXJzOiB7XG4gICAgICAgICAgICAgIGRpc2FibGVkOiBbXG4gICAgICAgICAgICAgICAgc3RhcnREYXRlLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIGJlZm9yZTogc3RhcnREYXRlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgICBvbkRheUNoYW5nZT17ZGF5ID0+IHtcbiAgICAgICAgICAgIHNldEVuZERhdGUoZGF5KTtcbiAgICAgICAgICB9fVxuICAgICAgICAvPlxuICAgICAgPC9kaXY+XG5cbiAgICAgIDxzdHlsZSBqc3g+e2BcbiAgICAgICAgLmRhdGUtcmFuZ2UtcGlja2VyLWNvbnRhaW5lciBkaXYge1xuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDMwJSA3MCU7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgfVxuICAgICAgICBsYWJlbCB7XG4gICAgICAgICAgcGFkZGluZy10b3A6IDEwcHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cblxuICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+e2BcbiAgICAgICAgLkRheVBpY2tlcklucHV0IGlucHV0IHtcbiAgICAgICAgICB3aWR0aDogMTIwcHg7XG4gICAgICAgICAgcGFkZGluZzogMTBweDtcbiAgICAgICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgICAgIH1cbiAgICAgIGB9PC9zdHlsZT5cbiAgICA8L2Rpdj5cbiAgKTtcbn07XG4iXX0= */\\n/*@ sourceURL=/Users/urbanobaz/Desktop/projects/nextbnb/components/DayRangePicker.js */\"), __jsx(_JSXStyle, {\n    id: \"2975770914\",\n    __self: this\n  }, \".DayPickerInput input{width:120px;padding:10px;font-size:16px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy91cmJhbm9iYXovRGVza3RvcC9wcm9qZWN0cy9uZXh0Ym5iL2NvbXBvbmVudHMvRGF5UmFuZ2VQaWNrZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUd5QixBQUd1QixZQUNDLGFBQ0UsZUFDakIiLCJmaWxlIjoiL1VzZXJzL3VyYmFub2Jhei9EZXNrdG9wL3Byb2plY3RzL25leHRibmIvY29tcG9uZW50cy9EYXlSYW5nZVBpY2tlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgRGF5UGlja2VySW5wdXQgZnJvbSBcInJlYWN0LWRheS1waWNrZXIvRGF5UGlja2VySW5wdXRcIjtcbmltcG9ydCBcInJlYWN0LWRheS1waWNrZXIvbGliL3N0eWxlLmNzc1wiO1xuaW1wb3J0IGRhdGVGbnNGb3JtYXQgZnJvbSBcImRhdGUtZm5zL2Zvcm1hdFwiO1xuaW1wb3J0IGRhdGVGbnNQYXJzZSBmcm9tIFwiZGF0ZS1mbnMvcGFyc2VcIjtcbmltcG9ydCB7IERhdGVVdGlscyB9IGZyb20gXCJyZWFjdC1kYXktcGlja2VyXCI7XG5cbmNvbnN0IHBhcnNlRGF0ZSA9IChzdHIsIGZvcm1hdCwgbG9jYWxlKSA9PiB7XG4gIGNvbnN0IHBhcnNlZCA9IGRhdGVGbnNQYXJzZShzdHIsIGZvcm1hdCwgbmV3IERhdGUoKSwgeyBsb2NhbGUgfSk7XG4gIHJldHVybiBEYXRlVXRpbHMuaXNEYXRlKHBhcnNlZCkgPyBwYXJzZWQgOiBudWxsO1xufTtcblxuY29uc3QgZm9ybWF0RGF0ZSA9IChkYXRlLCBmb3JtYXQsIGxvY2FsZSkgPT5cbiAgZGF0ZUZuc0Zvcm1hdChkYXRlLCBmb3JtYXQsIHsgbG9jYWxlIH0pO1xuXG5jb25zdCBmb3JtYXQgPSBcImRkIE1NTSB5eXl5XCI7XG5cbmNvbnN0IHRvZGF5ID0gbmV3IERhdGUoKTtcbmNvbnN0IHRvbW9ycm93ID0gbmV3IERhdGUodG9kYXkpO1xudG9tb3Jyb3cuc2V0RGF0ZSh0b21vcnJvdy5nZXREYXRlKCkgKyAxKVxuXG5jb25zdCBudW1iZXJPZk5pZ2h0c0JldHdlZW5EYXRlcyA9IChzdGFydERhdGUsIGVuZERhdGUpID0+IHtcbiAgY29uc3Qgc3RhcnQgPSBuZXcgRGF0ZShzdGFydERhdGUpO1xuICBjb25zdCBlbmQgPSBuZXcgRGF0ZShlbmREYXRlKVxuICBsZXQgZGF5Q291bnQgPSAwO1xuXG4gIHdoaWxlIChlbmQgPiBzdGFydCkge1xuICAgIGRheUNvdW50Kys7XG4gICAgc3RhcnQuc2V0RGF0ZShzdGFydC5nZXREYXRlKCkgKyAxKTtcbiAgfVxuXG4gIHJldHVybiBkYXlDb3VudDtcbn1cblxuZXhwb3J0IGRlZmF1bHQgKCkgPT4ge1xuICBjb25zdCBbc3RhcnREYXRlLCBzZXRTdGF0ZURhdGVdID0gdXNlU3RhdGUobmV3IERhdGUoKSk7XG4gIGNvbnN0IFtlbmREYXRlLCBzZXRFbmREYXRlXSA9IHVzZVN0YXRlKG5ldyBEYXRlKCkpO1xuXG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJkYXRlLXJhbmdlLXBpY2tlci1jb250YWluZXJcIj5cbiAgICAgIDxkaXY+XG4gICAgICAgIDxsYWJlbD5Gcm9tOjwvbGFiZWw+XG4gICAgICAgIDxEYXlQaWNrZXJJbnB1dFxuICAgICAgICAgIGZvcm1hdERhdGU9e2Zvcm1hdERhdGV9XG4gICAgICAgICAgZm9ybWF0PXtmb3JtYXR9XG4gICAgICAgICAgcGFyc2VEYXRlPXtwYXJzZURhdGV9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e2Ake2RhdGVGbnNGb3JtYXQobmV3IERhdGUoKSwgZm9ybWF0KX1gfVxuICAgICAgICAgIGRheVBpY2tlclByb3BzPXt7XG4gICAgICAgICAgICBtb2RpZmllcnM6IHtcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IHtcbiAgICAgICAgICAgICAgICBiZWZvcmU6IG5ldyBEYXRlKClcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH19XG4gICAgICAgICAgb25EYXlDaGFuZ2U9e2RheSA9PiB7XG4gICAgICAgICAgICBzZXRTdGF0ZURhdGUoZGF5KTtcbiAgICAgICAgICAgIGlmIChudW1iZXJPZk5pZ2h0c0JldHdlZW5EYXRlcyhkYXksIGVuZERhdGUpIDwgMSkge1xuICAgICAgICAgICAgICBjb25zdCBuZXdFbmREYXRlID0gbmV3IERhdGUoZGF5KTtcbiAgICAgICAgICAgICAgbmV3RW5kRGF0ZS5zZXREYXRlKG5ld0VuZERhdGUuZ2V0RGF0ZSgpICsgMSk7XG4gICAgICAgICAgICAgIHNldEVuZERhdGUobmV3RW5kRGF0ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfX1cbiAgICAgICAgLz5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPGxhYmVsPlRvOjwvbGFiZWw+XG4gICAgICAgIDxEYXlQaWNrZXJJbnB1dFxuICAgICAgICAgIGZvcm1hdERhdGU9e2Zvcm1hdERhdGV9XG4gICAgICAgICAgZm9ybWF0PXtmb3JtYXR9XG4gICAgICAgICAgcGFyc2VEYXRlPXtwYXJzZURhdGV9XG4gICAgICAgICAgcGxhY2Vob2xkZXI9e2Ake2RhdGVGbnNGb3JtYXQobmV3IERhdGUoKSwgZm9ybWF0KX1gfVxuICAgICAgICAgIGRheVBpY2tlclByb3BzPXt7XG4gICAgICAgICAgICBtb2RpZmllcnM6IHtcbiAgICAgICAgICAgICAgZGlzYWJsZWQ6IFtcbiAgICAgICAgICAgICAgICBzdGFydERhdGUsXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgYmVmb3JlOiBzdGFydERhdGVcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIF1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9fVxuICAgICAgICAgIG9uRGF5Q2hhbmdlPXtkYXkgPT4ge1xuICAgICAgICAgICAgc2V0RW5kRGF0ZShkYXkpO1xuICAgICAgICAgIH19XG4gICAgICAgIC8+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPHN0eWxlIGpzeD57YFxuICAgICAgICAuZGF0ZS1yYW5nZS1waWNrZXItY29udGFpbmVyIGRpdiB7XG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcbiAgICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMzAlIDcwJTtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICB9XG4gICAgICAgIGxhYmVsIHtcbiAgICAgICAgICBwYWRkaW5nLXRvcDogMTBweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuXG4gICAgICA8c3R5bGUganN4IGdsb2JhbD57YFxuICAgICAgICAuRGF5UGlja2VySW5wdXQgaW5wdXQge1xuICAgICAgICAgIHdpZHRoOiAxMjBweDtcbiAgICAgICAgICBwYWRkaW5nOiAxMHB4O1xuICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDtcbiAgICAgICAgfVxuICAgICAgYH08L3N0eWxlPlxuICAgIDwvZGl2PlxuICApO1xufTtcbiJdfQ== */\\n/*@ sourceURL=/Users/urbanobaz/Desktop/projects/nextbnb/components/DayRangePicker.js */\"));\n});","map":{"version":3,"sources":["/Users/urbanobaz/Desktop/projects/nextbnb/components/DayRangePicker.js"],"names":["useState","DayPickerInput","dateFnsFormat","dateFnsParse","DateUtils","parseDate","str","format","locale","parsed","Date","isDate","formatDate","date","today","tomorrow","setDate","getDate","numberOfNightsBetweenDates","startDate","endDate","start","end","dayCount","setStateDate","setEndDate","modifiers","disabled","before","day","newEndDate"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from \"date-fns/format\";\nimport dateFnsParse from \"date-fns/parse\";\nimport { DateUtils } from \"react-day-picker\";\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale });\n\nconst format = \"dd MMM yyyy\";\n\nconst today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1)\n\nconst numberOfNightsBetweenDates = (startDate, endDate) => {\n  const start = new Date(startDate);\n  const end = new Date(endDate)\n  let dayCount = 0;\n\n  while (end > start) {\n    dayCount++;\n    start.setDate(start.getDate() + 1);\n  }\n\n  return dayCount;\n}\n\nexport default () => {\n  const [startDate, setStateDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  return (\n    <div className=\"date-range-picker-container\">\n      <div>\n        <label>From:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: {\n                before: new Date()\n              }\n            }\n          }}\n          onDayChange={day => {\n            setStateDate(day);\n            if (numberOfNightsBetweenDates(day, endDate) < 1) {\n              const newEndDate = new Date(day);\n              newEndDate.setDate(newEndDate.getDate() + 1);\n              setEndDate(newEndDate);\n            }\n          }}\n        />\n      </div>\n      <div>\n        <label>To:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                startDate,\n                {\n                  before: startDate\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setEndDate(day);\n          }}\n        />\n      </div>\n\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}