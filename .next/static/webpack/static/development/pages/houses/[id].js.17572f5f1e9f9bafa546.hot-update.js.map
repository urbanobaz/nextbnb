{"version":3,"file":"static/webpack/static/development/pages/houses/[id].js.17572f5f1e9f9bafa546.hot-update.js","sources":["webpack:///./components/DayRangePicker.js"],"sourcesContent":["import { useState } from \"react\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport \"react-day-picker/lib/style.css\";\nimport dateFnsFormat from \"date-fns/format\";\nimport dateFnsParse from \"date-fns/parse\";\nimport { DateUtils } from \"react-day-picker\";\n\nconst parseDate = (str, format, locale) => {\n  const parsed = dateFnsParse(str, format, new Date(), { locale });\n  return DateUtils.isDate(parsed) ? parsed : null;\n};\n\nconst formatDate = (date, format, locale) =>\n  dateFnsFormat(date, format, { locale });\n\nconst format = \"dd MMM yyyy\";\n\nconst today = new Date();\nconst tomorrow = new Date(today);\ntomorrow.setDate(tomorrow.getDate() + 1)\n\nexport default () => {\n  const [startDate, setStateDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  return (\n    <div className=\"date-range-picker-container\">\n      <div>\n        <label>From:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: {\n                before: new Date()\n              }\n            }\n          }}\n          onDayChange={day => {\n            setStateDate(day);\n          }}\n        />\n      </div>\n      <div>\n        <label>To:</label>\n        <DayPickerInput\n          formatDate={formatDate}\n          format={format}\n          parseDate={parseDate}\n          placeholder={`${dateFnsFormat(new Date(), format)}`}\n          dayPickerProps={{\n            modifiers: {\n              disabled: [\n                new Date(),\n                {\n                  before: new Date()\n                }\n              ]\n            }\n          }}\n          onDayChange={day => {\n            setEndDate(day);\n          }}\n        />\n      </div>\n\n      <style jsx>{`\n        .date-range-picker-container div {\n          display: grid;\n          border: 1px solid #ddd;\n          grid-template-columns: 30% 70%;\n          padding: 10px;\n        }\n        label {\n          padding-top: 10px;\n        }\n      `}</style>\n\n      <style jsx global>{`\n        .DayPickerInput input {\n          width: 120px;\n          padding: 10px;\n          font-size: 16px;\n        }\n      `}</style>\n    </div>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AADA;AADA;AAOA;AACA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AADA;AAHA;AADA;AAUA;AACA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgEA;;;;A","sourceRoot":""}